name: Update CalcDomain Data

on:
  push:
    branches: [ main, master ]
    paths:
      - '*.html'
      - 'subcategories/*.html'
      - '**/*.html'
  workflow_dispatch: # Permette esecuzione manuale

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Non servono dipendenze esterne, usiamo solo librerie standard

    - name: Check for data generation scripts
      run: |
        if [ ! -f "generate_data_files.py" ]; then
          echo "Script generate_data_files.py non trovato. Creando..."
          # Il workflow si fermer√† qui se manca lo script
          exit 1
        fi

    - name: Generate calculators-data.json
      run: |
        echo "üìÑ Generando calculators-data.json..."
        python generate_data_files.py --base-url "https://calcdomain.com" --dir "."

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Rilevate modifiche nei file generati"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è Nessuna modifica rilevata"
        fi

    - name: Display file stats
      if: steps.verify-changed-files.outputs.has_changes == 'true'
      run: |
        echo "üìä Statistiche file aggiornati:"
        if [ -f "calculators-data.json" ]; then
          echo "calculators-data.json: $(wc -l < calculators-data.json) righe"
          echo "Numero calcolatori: $(grep -o '"slug":' calculators-data.json | wc -l)"
        fi
        if [ -f "sitemap.xml" ]; then
          echo "sitemap.xml: $(grep -c '<url>' sitemap.xml) URL"
        fi
        if [ -f "robots.txt" ]; then
          echo "robots.txt: $(wc -l < robots.txt) righe"
        fi

    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Aggiungi i file modificati
        git add calculators-data.json sitemap.xml robots.txt
        
        # Crea timestamp per commit message
        TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
        
        # Commit con messaggio dettagliato
        CALC_COUNT=$(grep -o '"slug":' calculators-data.json | wc -l || echo "0")
        URL_COUNT=$(grep -c '<url>' sitemap.xml || echo "0")
        
        git commit -m "ü§ñ Auto-update: Data files refreshed
        
        - calculators-data.json: $CALC_COUNT calculators
        - sitemap.xml: $URL_COUNT URLs  
        - robots.txt: Updated
        - Generated: $TIMESTAMP
        
        [skip ci]" || echo "No changes to commit"
        
        # Push delle modifiche
        git push

    - name: Create deployment summary
      if: steps.verify-changed-files.outputs.has_changes == 'true'
      run: |
        echo "üéâ CalcDomain data update completed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Updated Files" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ calculators-data.json" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ sitemap.xml" >> $GITHUB_STEP_SUMMARY  
        echo "- ‚úÖ robots.txt" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "calculators-data.json" ]; then
          CALC_COUNT=$(grep -o '"slug":' calculators-data.json | wc -l)
          echo "## Statistics" >> $GITHUB_STEP_SUMMARY
          echo "- üìä Total calculators: $CALC_COUNT" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "sitemap.xml" ]; then
          URL_COUNT=$(grep -c '<url>' sitemap.xml)
          echo "- üó∫Ô∏è Sitemap URLs: $URL_COUNT" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. üîç Test search functionality on the site" >> $GITHUB_STEP_SUMMARY
        echo "2. üì§ Submit updated sitemap to Google Search Console" >> $GITHUB_STEP_SUMMARY
        echo "3. üöÄ Deploy changes to production if needed" >> $GITHUB_STEP_SUMMARY

    - name: No changes notification
      if: steps.verify-changed-files.outputs.has_changes == 'false'
      run: |
        echo "‚ÑπÔ∏è No data updates needed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All data files are already up to date." >> $GITHUB_STEP_SUMMARY
